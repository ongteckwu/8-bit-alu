/*
   This file was generated automatically by the Mojo IDE version B1.3.4.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input cclk,
    output reg spi_miso,
    input spi_ss,
    input spi_mosi,
    input spi_sck,
    output reg [3:0] spi_channel,
    input avr_tx,
    output reg avr_rx,
    input avr_rx_busy,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  reg [5:0] alufn;
  
  reg [7:0] a;
  
  reg [7:0] b;
  
  reg [7:0] o8;
  
  wire [8-1:0] M_add8_out;
  wire [1-1:0] M_add8_n;
  wire [1-1:0] M_add8_v;
  wire [1-1:0] M_add8_z;
  reg [2-1:0] M_add8_alufn10;
  reg [8-1:0] M_add8_a;
  reg [8-1:0] M_add8_b;
  add_2 add8 (
    .alufn10(M_add8_alufn10),
    .a(M_add8_a),
    .b(M_add8_b),
    .out(M_add8_out),
    .n(M_add8_n),
    .v(M_add8_v),
    .z(M_add8_z)
  );
  
  wire [8-1:0] M_compare8_out;
  reg [2-1:0] M_compare8_alufn21;
  reg [1-1:0] M_compare8_z;
  reg [1-1:0] M_compare8_n;
  reg [1-1:0] M_compare8_v;
  compare_3 compare8 (
    .alufn21(M_compare8_alufn21),
    .z(M_compare8_z),
    .n(M_compare8_n),
    .v(M_compare8_v),
    .out(M_compare8_out)
  );
  
  wire [8-1:0] M_bool8_out;
  reg [4-1:0] M_bool8_alufn30;
  reg [8-1:0] M_bool8_a;
  reg [8-1:0] M_bool8_b;
  bool_4 bool8 (
    .alufn30(M_bool8_alufn30),
    .a(M_bool8_a),
    .b(M_bool8_b),
    .out(M_bool8_out)
  );
  
  wire [8-1:0] M_shift8_out;
  reg [2-1:0] M_shift8_alufn10;
  reg [8-1:0] M_shift8_a;
  reg [3-1:0] M_shift8_b;
  shift_5 shift8 (
    .alufn10(M_shift8_alufn10),
    .a(M_shift8_a),
    .b(M_shift8_b),
    .out(M_shift8_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = 8'h00;
    spi_miso = 1'bz;
    spi_channel = 4'bzzzz;
    avr_rx = 1'bz;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    alufn[0+5-:6] = io_dip[16+0+5-:6];
    a[0+7-:8] = io_dip[8+0+7-:8];
    b[0+7-:8] = io_dip[0+0+7-:8];
    M_add8_a = a;
    M_add8_b = b;
    M_add8_alufn10 = alufn[0+1-:2];
    M_bool8_a = a;
    M_bool8_b = b;
    M_bool8_alufn30 = alufn[0+3-:4];
    M_shift8_a = a;
    M_shift8_b = b[0+2-:3];
    M_shift8_alufn10 = alufn[0+1-:2];
    M_compare8_z = M_add8_z;
    M_compare8_v = M_add8_v;
    M_compare8_n = M_add8_n;
    M_compare8_alufn21 = alufn[1+1-:2];
    
    case (alufn[4+1-:2])
      2'h0: begin
        o8[0+7-:8] = M_add8_out[0+7-:8];
      end
      2'h1: begin
        o8[0+7-:8] = M_bool8_out[0+7-:8];
      end
      2'h2: begin
        o8[0+7-:8] = M_shift8_out[0+7-:8];
      end
      2'h3: begin
        M_add8_alufn10 = 2'h1;
        o8 = M_compare8_out[0+7-:8];
      end
      default: begin
        o8 = 8'h01;
      end
    endcase
    io_led[0+7-:8] = o8;
  end
endmodule
