/*
   This file was generated automatically by the Mojo IDE version B1.3.4.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module add_2 (
    input [1:0] alufn10,
    input [7:0] a,
    input [7:0] b,
    output reg [7:0] out,
    output reg n,
    output reg v,
    output reg z
  );
  
  
  
  reg [7:0] sum;
  
  reg [7:0] xb;
  
  wire [8-1:0] M_add_sum;
  reg [8-1:0] M_add_a;
  reg [8-1:0] M_add_b;
  reg [1-1:0] M_add_alufn0;
  additon_6 add (
    .a(M_add_a),
    .b(M_add_b),
    .alufn0(M_add_alufn0),
    .sum(M_add_sum)
  );
  
  always @* begin
    
    case (alufn10[0+1-:2])
      2'h0: begin
        xb = b;
      end
      2'h1: begin
        xb = b ^ {4'h8{alufn10[0+0-:1]}};
      end
      default: begin
        xb = b;
      end
    endcase
    M_add_alufn0 = alufn10[0+0-:1];
    M_add_a = a;
    M_add_b = xb;
    sum = M_add_sum;
    out = sum;
    n = sum[7+0-:1];
    v = (a[7+0-:1] & (xb[7+0-:1]) & (~sum[7+0-:1])) | (~a[7+0-:1] & ~xb[7+0-:1] & sum[7+0-:1]);
    z = ~(((sum[0+0-:1] | sum[1+0-:1]) | (sum[2+0-:1] | sum[3+0-:1])) | ((sum[4+0-:1] | sum[5+0-:1]) | (sum[6+0-:1] | sum[7+0-:1])));
  end
endmodule
