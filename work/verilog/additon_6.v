/*
   This file was generated automatically by the Mojo IDE version B1.3.4.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module additon_6 (
    input [7:0] a,
    input [7:0] b,
    input alufn0,
    output reg [7:0] sum
  );
  
  
  
  reg [7:0] cout;
  
  always @* begin
    cout[0+0-:1] = alufn0;
    sum[0+0-:1] = a[0+0-:1] ^ b[0+0-:1] ^ cout[0+0-:1];
    cout[1+0-:1] = ((a[0+0-:1] ^ b[0+0-:1]) & cout[0+0-:1] | a[0+0-:1] & b[0+0-:1]);
    sum[1+0-:1] = a[1+0-:1] ^ b[1+0-:1] ^ cout[1+0-:1];
    cout[2+0-:1] = ((a[1+0-:1] ^ b[1+0-:1]) & cout[1+0-:1] | a[1+0-:1] & b[1+0-:1]);
    sum[2+0-:1] = a[2+0-:1] ^ b[2+0-:1] ^ cout[2+0-:1];
    cout[3+0-:1] = ((a[2+0-:1] ^ b[2+0-:1]) & cout[2+0-:1] | a[2+0-:1] & b[2+0-:1]);
    sum[3+0-:1] = a[3+0-:1] ^ b[3+0-:1] ^ cout[3+0-:1];
    cout[4+0-:1] = ((a[3+0-:1] ^ b[3+0-:1]) & cout[3+0-:1] | a[3+0-:1] & b[3+0-:1]);
    sum[4+0-:1] = a[4+0-:1] ^ b[4+0-:1] ^ cout[4+0-:1];
    cout[5+0-:1] = ((a[4+0-:1] ^ b[4+0-:1]) & cout[4+0-:1] | a[4+0-:1] & b[4+0-:1]);
    sum[5+0-:1] = a[5+0-:1] ^ b[5+0-:1] ^ cout[5+0-:1];
    cout[6+0-:1] = ((a[5+0-:1] ^ b[5+0-:1]) & cout[5+0-:1] | a[5+0-:1] & b[5+0-:1]);
    sum[6+0-:1] = a[6+0-:1] ^ b[6+0-:1] ^ cout[6+0-:1];
    cout[7+0-:1] = ((a[6+0-:1] ^ b[6+0-:1]) & cout[6+0-:1] | a[6+0-:1] & b[6+0-:1]);
    sum[7+0-:1] = a[7+0-:1] ^ b[7+0-:1] ^ cout[7+0-:1];
  end
endmodule
